// ///////////////////////////////////////////////////////////////////////////////////////
// Geometry Visualization Server
// Copyright (c) 2018 Logan Barnes - All Rights Reserved
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// ///////////////////////////////////////////////////////////////////////////////////////
syntax = "proto3";

package gvs.proto;

import "google/protobuf/wrappers.proto";

message Message {
    string identifier = 1;
    string contents = 2;
}

message Messages {
    repeated Message messages = 1;
}

message ID {
    string value = 1;
}

//message Vec3 {
//    float x = 1;
//    float y = 2;
//    float z = 3;
//}

//message Mat4 {
//    repeated float data = 1;
//}

enum GeometryFormat {
    POINTS = 0;
    LINES = 1;
    LINE_STRIP = 2;
    TRIANGLES = 3;
    TRIANGLE_STRIP = 4;
    TRIANGLE_FAN = 5;
}

message GeometryFormatValue {
    GeometryFormat value = 1;
}

//enum DisplayMode {
//    POSITION = 0;
//    NORMALS = 1;
//    TEX_COORDS = 2;
//    VERTEX_COLORS = 3;
//    GLOBAL_COLOR = 4;
//    SIMPLE_SHADING = 5;
//    ADVANCED_SHADING = 6;
//    WHITE = 7;
//}

//message DisplayModeValue {
//    DisplayMode value = 1;
//}

message FloatList {
    repeated float value = 1;
}

message UIntList {
    repeated uint32 value = 1;
}

message GeometryInfo3D {
    FloatList positions = 1;
    FloatList normals = 2;
    FloatList tex_coords = 3;
    FloatList vertex_colors = 4;
    UIntList indices = 5;
}

message DisplayInfo {
    //    google.protobuf.StringValue readable_id = 1;
    GeometryFormatValue geometry_format = 2;
    //    DisplayModeValue shader_display_mode = 3;
    //    Mat4 transform = 4;
    //    Vec3 global_color = 5;
    //    google.protobuf.BoolValue visible = 6;
    //    google.protobuf.FloatValue opacity = 7;
}

message SceneItemInfo {
    ID id = 1;
    GeometryInfo3D geometry_info = 2;
    DisplayInfo display_info = 3;
    // ID parent = 4;
    // repeated ID children = 5;
}

message SceneItems {
    map<string, SceneItemInfo> items = 1;
}
